---
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pr: none

schedules:
  - cron: "0 3 * * *"
    displayName: Nightly build
    branches:
      include:
        - master-bytelight
    always: true

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self
    # readme: https://docs.microsoft.com/en-us/azure/devops/pipelines/scripts/git-commands?view=azure-devops&tabs=yaml
    persistCredentials: true
  - task: Docker@2
    displayName: Login to ACR for Dev registry
    inputs:
      command: login
      containerRegistry: cf-dev-acr-service-connection
  - task: Docker@2
    displayName: Login to ACR for QA registry
    inputs:
      command: login
      containerRegistry: cf-qa-acr-service-connection
  - task: Docker@2
    displayName: Login to ACR for Production registry
    inputs:
      command: login
      containerRegistry: cf-prod-acr-service-connection
  - task: AzureCLI@2
    displayName: 'Install tools if needed'
    inputs:
      azureSubscription: 'cf-dev-az-service-connection'
      scriptType: bash
      scriptLocation: scriptPath
      scriptPath: './ci/recipes/install_tools_if_needed.sh'
      # inlineScript:
      # arguments
      # powerShellErrorActionPreference
      # addSpnToEnvironment
      # useGlobalConfig
      # workingDirectory
      # failOnStandardError
      # powerShellIgnoreLASTEXITCODE
  - task: AzureCLI@2
    displayName: 'Trace Environment'
    inputs:
      azureSubscription: 'cf-dev-az-service-connection'
      scriptType: bash
      scriptLocation: scriptPath
      scriptPath: './ci/recipes/trace_environment.sh'
      # inlineScript:
      # arguments
      # powerShellErrorActionPreference
      # addSpnToEnvironment
      # useGlobalConfig
      # workingDirectory
      # failOnStandardError
      # powerShellIgnoreLASTEXITCODE
  - task: AzureCLI@2
    displayName: 'Update Neuvector Containers'
    inputs:
      azureSubscription: 'cf-prod-az-service-connection'
      scriptType: bash
      scriptLocation: 'inlineScript'
      # scriptPath
      inlineScript: >
        DOCKER_TOKEN="$(docker_token)" DOCKER_USER="$(docker_user)" ./ci/recipes/update_neuvector.sh
      # arguments
      # powerShellErrorActionPreference
      # addSpnToEnvironment
      # useGlobalConfig
      # workingDirectory
      # failOnStandardError
      # powerShellIgnoreLASTEXITCODE
