# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - 'master-{{ .app }}'
  - 'azure-pipelines'

pool:
  vmImage: 'ubuntu-latest'

variables:
  DD_SECRET_VAULT: '{{ .app }}-devops-kv'
  BEDROCK_DEPLOYMENT_CATALOG: '{{ .app }}_deployments.yaml'
  BEDROCK_CLUSTER: 'CF_Development'
  BEDROCK_INVOKED_DIR: ''
  BEDROCK_SUBSCRIPTION: '{{ .app }}-dev-az-service-connection'

jobs:
  - job: 'build_{{ .service_name }}_service'
    timeoutInMinutes: 20
    steps:
      - checkout: 'self'
        # readme: https://docs.microsoft.com/en-us/azure/devops/pipelines/scripts/git-commands?view=azure-devops&tabs=yaml
        persistCredentials: true
        condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
      - task: AzureCLI@2
        condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
        displayName: 'Init Bedrock Tools Container Runtime'
        inputs:
          azureSubscription: $(BEDROCK_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: >-
            ./.bedrock/ci/recipes/init_bedrock_tools.sh
      - task: AzureCLI@2
        condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
        displayName: 'Static Analysis'
        inputs:
          azureSubscription: $(BEDROCK_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: >-
            DD_SECRET_VAULT=$(DD_SECRET_VAULT)
            BEDROCK_DEPLOYMENT_CATALOG=$(BEDROCK_DEPLOYMENT_CATALOG)
            BEDROCK_CLUSTER=$(BEDROCK_CLUSTER)
            BEDROCK_INVOKED_DIR=$(BEDROCK_INVOKED_DIR)
            ./.bedrock/ci/recipes/invoke_bedrock_recipe.sh
            sast_repo
      - task: AzureCLI@2
        condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
        displayName: 'pre_build_housekeeping'
        inputs:
          azureSubscription: $(BEDROCK_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: >-
            DD_SECRET_VAULT=$(DD_SECRET_VAULT)
            BEDROCK_DEPLOYMENT_CATALOG=$(BEDROCK_DEPLOYMENT_CATALOG)
            BEDROCK_CLUSTER=$(BEDROCK_CLUSTER)
            BEDROCK_INVOKED_DIR=$(BEDROCK_INVOKED_DIR)
            ./.bedrock/ci/recipes/invoke_bedrock_recipe.sh
            pre_build_housekeeping
      - task: AzureCLI@2
        condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
        displayName: 'Docker: build and push default container'
        inputs:
          azureSubscription: $(BEDROCK_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: >-
            DD_SECRET_VAULT=$(DD_SECRET_VAULT)
            BEDROCK_DEPLOYMENT_CATALOG=$(BEDROCK_DEPLOYMENT_CATALOG)
            BEDROCK_CLUSTER=$(BEDROCK_CLUSTER)
            BEDROCK_INVOKED_DIR=$(BEDROCK_INVOKED_DIR)
            ./.bedrock/ci/recipes/invoke_bedrock_recipe.sh
            docker_build_and_push_default_tag
      - task: AzureCLI@2
        condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
        displayName: 'Static Analysis - in container'
        inputs:
          azureSubscription: $(BEDROCK_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: >-
            DD_SECRET_VAULT=$(DD_SECRET_VAULT)
            BEDROCK_DEPLOYMENT_CATALOG=$(BEDROCK_DEPLOYMENT_CATALOG)
            BEDROCK_CLUSTER=$(BEDROCK_CLUSTER)
            BEDROCK_INVOKED_DIR=$(BEDROCK_INVOKED_DIR)
            ./.bedrock/ci/recipes/invoke_bedrock_recipe.sh
            sast_in_container
      - task: AzureCLI@2
        condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
        displayName: 'Dynamic Analysis - in container'
        inputs:
          azureSubscription: $(BEDROCK_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: >-
            DD_SECRET_VAULT=$(DD_SECRET_VAULT)
            BEDROCK_DEPLOYMENT_CATALOG=$(BEDROCK_DEPLOYMENT_CATALOG)
            BEDROCK_CLUSTER=$(BEDROCK_CLUSTER)
            BEDROCK_INVOKED_DIR=$(BEDROCK_INVOKED_DIR)
            ./.bedrock/ci/recipes/invoke_bedrock_recipe.sh
            dast_in_container
      - task: AzureCLI@2
        condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
        displayName: 'CVE Scan: default docker container'
        inputs:
          azureSubscription: $(BEDROCK_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: >-
            DD_SECRET_VAULT=$(DD_SECRET_VAULT)
            BEDROCK_DEPLOYMENT_CATALOG=$(BEDROCK_DEPLOYMENT_CATALOG)
            BEDROCK_CLUSTER=$(BEDROCK_CLUSTER)
            BEDROCK_INVOKED_DIR=$(BEDROCK_INVOKED_DIR)
            ./.bedrock/ci/recipes/invoke_bedrock_recipe.sh
            cve_scan_default_docker_container
      - task: AzureCLI@2
        condition: and(true, succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
        displayName: 'BlackDuck Scan: Source License & CVE scan default docker container'
        inputs:
          azureSubscription: $(BEDROCK_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: >-
            ./.bedrock/ci/recipes/blackduck_scanner.sh
      - task: AzureCLI@2
        condition: and(false, succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
        displayName: 'BlackDuck Scan: Source License & CVE scan default docker container'
        inputs:
          azureSubscription: $(BEDROCK_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: >-
            DD_SECRET_VAULT=$(DD_SECRET_VAULT)
            BEDROCK_DEPLOYMENT_CATALOG=$(BEDROCK_DEPLOYMENT_CATALOG)
            BEDROCK_CLUSTER=$(BEDROCK_CLUSTER)
            BEDROCK_INVOKED_DIR=$(BEDROCK_INVOKED_DIR)
            ./.bedrock/ci/recipes/invoke_bedrock_recipe.sh
            black_duck_scan_src_and_default_docker_container
      - task: AzureCLI@2
        condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
        displayName: 'post_build_housekeeping'
        inputs:
          azureSubscription: $(BEDROCK_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: >-
            DD_SECRET_VAULT=$(DD_SECRET_VAULT)
            BEDROCK_DEPLOYMENT_CATALOG=$(BEDROCK_DEPLOYMENT_CATALOG)
            BEDROCK_CLUSTER=$(BEDROCK_CLUSTER)
            BEDROCK_INVOKED_DIR=$(BEDROCK_INVOKED_DIR)
            ./.bedrock/ci/recipes/invoke_bedrock_recipe.sh
            post_build_housekeeping
      - task: AzureCLI@2
        condition: and(succeeded(), ne(variables['Build.SourceVersionMessage'], 'automated update of semver on git commit'))
        displayName: 'Bless Service Artifacts'
        inputs:
          azureSubscription: $(BEDROCK_SUBSCRIPTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: >-
            DD_SECRET_VAULT=$(DD_SECRET_VAULT)
            BEDROCK_DEPLOYMENT_CATALOG=$(BEDROCK_DEPLOYMENT_CATALOG)
            BEDROCK_CLUSTER=$(BEDROCK_CLUSTER)
            BEDROCK_INVOKED_DIR=$(BEDROCK_INVOKED_DIR)
            ./.bedrock/ci/recipes/invoke_bedrock_recipe.sh
            bless_service_artifacts
