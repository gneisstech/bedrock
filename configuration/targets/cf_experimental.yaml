---
target:
  metadata:
    product_portfolio_name: &productName 'connected-facilities'
    environment_name: &environmentName 'Dev'
    default_azure_location: &defaultAzureLocation 'eastus'
    default_azure_subscription: &defaultAzureSubscription '5649ad97-1fd3-460f-b569-9995bbb6c5c0'  # Acuity Brands, Inc. ConnectedFacilities-Dev
    tls_cert_subscription: &subscription_tls '5e49f516-d005-4ae8-a287-031c8573401c'  # Acuity Brands, Inc. Allspice-Dev
    dns_subscription: &subscription_dns '5e49f516-d005-4ae8-a287-031c8573401c'  # Acuity Brands, Inc. Allspice-Dev
    service_deployment:
      tenant: 'caadbe96-024e-4f67-82ec-fb28ff53d16d'  # Acuity Brands, Inc.
      authn_tenant: &environmentTenant 'common'  # allow all AD tenants to authenticate
    app_registration:
      tenant: &appRegistrationTenant 'db566806-bf04-4296-98cc-ba6d2d950788'  # Acuity Brands Technical Services, INC
      application_id: &appRegistrationID '3a6085d9-676a-473c-832f-b73b2b7f7561'  # Acuity Brands Atrius Dev UI
      # application_id: &appRegistrationID 'ca8318ee-a3f8-45d4-b284-0ec0ce809789'  # @@ TODO - manual setup due to insufficient permissions in AZ CLI
    objectsDatabase:
      admin_name: &cfObjectsDBAdminName 'CF_Reader'
      secret_name: &cfObjectsDBSecretName 'ALLSPICEDEV-CFReader-SQLUserPassword'
  iaas:
    location: *defaultAzureLocation
    resource_groups:
      # for naming conventions, see: https://docs.acuitynext.net/wiki/azure-naming-conventions/
      # pre-existing Atrius resource groups with shared configuration state
      - name: &atriusDnsRG 'atriusops-allspicedev'
        action: 'read'
      # CF Dev resource groups
      - name: &cfWafRG 'cf-exp-CfDev'
        action: 'create'
      - name: &cfDbRG 'cf-exp-CfDev'
        action: 'create'
      - name: &cfKeysRG 'cf-exp-CfDev'
        action: 'create'
      - name: &cfAcrRG 'Acr-CfDev'
        action: 'create'
      - name: &cfNetworksRG 'cf-exp-CfDev'
        action: 'create'
      - name: &cfAppSvcRG 'cf-exp-CfDev'
        action: 'create'
      - name: &cfAuthNSvcRG 'cf-exp-CfDev'
        action: 'create'
      - name: &cfIngestSvcRG 'cf-exp-CfDev'
        action: 'create'
    networking:
      public_ip:
        - name: &wafIP 'cf-exp-waf-pip'
          resource_group: *cfWafRG
          subscription: *defaultAzureSubscription
          arm_type: 'Microsoft.Network/publicIPAddresses'
          sku: 'Standard'
          allocation_method: 'Static'
          action: 'create'
        - name: &postAuthnIP 'cf-exp-post-auth-pip'
          resource_group: *cfAuthNSvcRG
          subscription: *defaultAzureSubscription
          arm_type: 'Microsoft.Network/publicIPAddresses'
          sku: 'Basic'
          allocation_method: 'Dynamic'
          action: 'create'
        - name: &ingestVMIP 'cf-exp-ingest-vm-pip'
          resource_group: *cfIngestSvcRG
          subscription: *defaultAzureSubscription
          arm_type: 'Microsoft.Network/publicIPAddresses'
          sku: 'Standard'
          allocation_method: 'Static'
          action: 'create'
      dns_a_records:
        - zone: &dnsZone 'dev.atrius-iot.com'
          host: &dnsHost 'cf-exp'
          fqdn: 'cf-exp.dev.atrius-iot.com.'
          resource_group: *atriusDnsRG
          subscription: *subscription_dns
          a_record_ttl: 3600
          a_record_public_ip: *wafIP
          action: 'create'
        - zone: 'dev.atrius-iot.com'
          host: &postAuthnGateway 'cf-exp-post-authn-ag'
          fqdn: &postAuthnGatewayFqdn 'cf-exp-post-authn-ag.dev.atrius-iot.com.'
          resource_group: *atriusDnsRG
          subscription: *subscription_dns
          a_record_ttl: 3600
          a_record_public_ip: *postAuthnIP
          action: 'create'
      vnets:
        - name: 'cf-exp-vnet'
          resource_group: *cfNetworksRG
          cidr: '10.1.0.0/16'
          arm_type: 'Microsoft.Network/virtualNetworks'
          action: 'create'
          subnets:
            - name: 'cf-exp-0-subnet'
              cidr: '10.1.0.0/24'
            - name: 'cf-exp-1-subnet'
              cidr: '10.1.1.0/24'
        - name: &ingestVnet 'cf-exp-ingest-vnet'
          resource_group: *cfNetworksRG
          cidr: '10.2.0.0/16'
          arm_type: 'Microsoft.Network/virtualNetworks'
          action: 'create'
          subnets:
            - name: 'cf-exp-0-subnet'
              cidr: '10.2.0.0/24'
            - name: 'cf-exp-1-subnet'
              cidr: '10.2.1.0/24'
  paas:
    location: *defaultAzureLocation
    keyvaults:
      # pre-existing Atrius key vault with shared configuration state such as TLS certificate
      - name: &atriusKVName 'atrius01kvbxkbdsepg6'
        action: 'read'
      # CF Dev Key Vault
      - name: &kvName 'cf-exp-master-kv'
        resource_group: *cfKeysRG
        arm_type: 'Microsoft.KeyVault/vaults'
        action: 'create'
    databases:
      servers:
        - name: &cfDefaultDbServer 'cf-exp-sqls'
          arm_type: 'Microsoft.Sql/servers'
          subscription: *defaultAzureSubscription
          resource_group: *cfDbRG
          admin_name: &cfDefaultDBAdminName 'cf-exp-sqls-admin-user'
          admin_password_kv:
            vault: *kvName
            resource_group: *cfKeysRG
            secret_name: &cfDefaultDBSecretName 'admin-pw-for-cf-exp-sqls'
          default_firewall_rule:
            name: 'AllowAllWindowsAzureIps'
            arm_type: 'Microsoft.Sql/servers/firewallRules'
            start_ip_address: '0.0.0.0'
            end_ip_address: '0.0.0.0'
          action: 'preserve'
      instances:
        - name: &selfHealingSchema 'cf-exp-self-healing'
          arm_type: 'Microsoft.Sql/servers/databases'
          resource_group: *cfDbRG
          server: *cfDefaultDbServer
          license_type: 'LicenseIncluded'
          max_size: '250GB'
          zone_redundant: false
          catalog_collation: 'SQL_Latin1_General_CP1_CI_AS'
          collation: 'SQL_Latin1_General_CP1_CI_AS'
          capacity: 2
          tier: 'Standard'
          family: ''
          service_objective: 'S0'
          action: 'preserve'
        - name: &healthSchema 'cf-exp-twin01-db'
          arm_type: 'Microsoft.Sql/servers/databases'
          resource_group: *cfDbRG
          server: *cfDefaultDbServer
          license_type: 'LicenseIncluded'
          max_size: '250GB'
          zone_redundant: false
          catalog_collation: 'SQL_Latin1_General_CP1_CI_AS'
          collation: 'SQL_Latin1_General_CP1_CI_AS'
          capacity: 2
          tier: 'Standard'
          family: ''
          service_objective: 'S0'
          action: 'preserve'
    server_farms:
      - name: &authServiceFarm 'cf-exp-authservice-asp'
        arm_type: 'Microsoft.Web/serverFarms'
        resource_group: *cfAuthNSvcRG
        is_linux: true
        number_of_workers: 1
        sku: 'P1V2'
        action: 'create'
      - name: &webServiceFarm 'cf-exp-webservice-asp'
        arm_type: 'Microsoft.Web/serverFarms'
        resource_group: *cfAppSvcRG
        is_linux: true
        number_of_workers: 1
        sku: 'P1V2'
        action: 'create'
    container_registries:
      - name: &primaryACR 'cfdevregistry'
        arm_type: 'Microsoft.ContainerRegistry/registries'
        resource_group: 'Acr-CfDev'
        uri: &uriPrimaryACR 'https://cfdevregistry.azurecr.io'
        sku: 'Standard'
        admin_enabled: true
        action: 'create'
    virtual_machines:
      - name: &cfIngestServer 'cfexp-ingest-vm'  # must be <= 15 chars
        arm_type: 'Microsoft.Compute/virtualMachines'
        subscription: *defaultAzureSubscription
        resource_group: *cfIngestSvcRG
        admin_name: &cfDefaultIngestVmAdminName 'cfexp-ingest-admin'  # must be <= 20 chars
        admin_password_kv:
          vault: *kvName
          resource_group: *cfKeysRG
          secret_name: &cfDefaultIngestVmSecretName 'admin-pw-for-cf-exp-ingest-vm'
        license_type: 'Windows_Server'
        public_ip_address: *ingestVMIP
        disks:
          os_disk:
            os_disk_name: 'cf-ingest-os-disk'
            os_disk_caching: 'ReadWrite'
            os_disk_size_gb: 127
          data_disks:  # these do not auto-format or auto-mount [yet]
            data_disk_caching: 'ReadWrite'
            data_disk_sizes_gb:
              - 1000
        # boot_diagnostics_storage: "$(server_attr 'boot_diagnostics_storage')"
        location: *defaultAzureLocation
        image: 'MicrosoftWindowsServer:WindowsServer:2016-Datacenter:latest'
        size: 'Standard_DS2_v2'
        priority: 'Regular'
        authentication_type: 'password'
        vnet_name: *ingestVnet
        action: 'preserve'
  saas:
    authn_services:
      farm: *authServiceFarm
      services:
        - name: &cfAuthnService 'cf-exp-auth-proxy'
          arm_type: 'Microsoft.Web/sites'
          resource_group: *cfAuthNSvcRG
          container:
            registry: *primaryACR
            name: &authnContainer 'cf-oauth-proxy-docker'
            tag: &authnTag 'connected-facilities'
          acr_webhook:
            name: 'cfexpauthproxywh'
            registry: *primaryACR
            resource_group: *cfAcrRG
            status: 'enabled'
            actions:
              - 'push'
            arm_type: 'Microsoft.ContainerRegistry/registries/webhooks'
          config:
            DOCKER_ENABLE_CI: true
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            OAUTH2_PROXY_AZURE_TENANT: *environmentTenant
            OAUTH2_PROXY_CLIENT_ID: *appRegistrationID
            OAUTH2_PROXY_CLIENT_SECRET:
              - '##secure_secret={"vault":"'
              - *kvName
              - '","secret_name":"'
              - &oauthProxyClientSecretName 'cf-exp-oauth2-proxy-client-secret'
              - '"}'
              - '##'
            OAUTH2_PROXY_COOKIE_EXPIRE: '4320h'
            OAUTH2_PROXY_COOKIE_NAME:
              - 'ConnectedFacilities_AUTHN'
              - '_'
              - *dnsHost
              - '_'
              - *environmentName
              - '__utm'
            OAUTH2_PROXY_COOKIE_PATH: '/'
            OAUTH2_PROXY_COOKIE_REFRESH: '1m'
            OAUTH2_PROXY_COOKIE_SECRET:
              - '##secure_secret={"vault":"'
              - *kvName
              - '","secret_name":"'
              - 'cf-exp-oauth2-proxy-cookie-secret'
              - '"}'
              - '##'
            OAUTH2_PROXY_EMAIL_DOMAINS: '*'
            OAUTH2_PROXY_EXTRA_JWT_ISSUERS: &trustedIdProviders
              - 'https://sts.windows.net/caadbe96-024e-4f67-82ec-fb28ff53d16d/'
              - '='
              - 'https://management.core.windows.net/'
              - ','
              - 'https://sts.windows.net/db566806-bf04-4296-98cc-ba6d2d950788/'
              - '='
              - 'https://management.core.windows.net/'
              - ','
              - 'https://sts.windows.net/f687c0f3-9126-45bd-b994-b96df8a19c91/'
              - '='
              - 'https://management.core.windows.net/'
            OAUTH2_PROXY_HTTP_ADDRESS: '0.0.0.0:4180'
            OAUTH2_PROXY_PASS_ACCESS_TOKEN: true
            OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: true
            OAUTH2_PROXY_PING_PATH: '/'
            OAUTH2_PROXY_PROVIDER: 'azure'
            OAUTH2_PROXY_REDIRECT_URL: &appAuthCallbackURL
              - 'https://'
              - *dnsHost
              - '.'
              - *dnsZone
              - '/oauth2/callback'
            OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: true
            OAUTH2_PROXY_SILENCE_PING_LOGGING: true
            OAUTH2_PROXY_SKIP_AUTH_REGEX:  # @@ TODO TECHDEBT while SHLv1 does not have a JWT token
              - '^/cf-self-healing-api/api/v1/process'
            OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS: true
            OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: true
            OAUTH2_PROXY_UPSTREAMS:  # @@ TODO private ip on vnet
              - 'https://'
              - *postAuthnGatewayFqdn
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
            WEBSITES_PORT: 4180
            WEBSITE_HTTPLOGGING_RETENTION_DAYS: 7
          connection_strings:
          container_settings:
            DOCKER_CUSTOM_IMAGE_NAME:
              - 'DOCKER|'
              - *primaryACR
              - '.azurecr.io/'
              - *authnContainer
              - ':'
              - *authnTag
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
          logging: &defaultWebAppLogging
            application_logging: true
            detailed_error_messages: true
            docker_container_logging: 'filesystem'
            failed_request_tracing: true
            level: 'warning'
            web_server_logging: 'filesystem'
          tls: 'true'
          access_restrictions:
            - priority: 1
              rule_name: 'downstream WAF'
              action: 'Allow'
              description: 'only allow access from downstream WAF'
              ignore_missing_endpoint: 'true'
              scm_site: 'false'
              subnet:
                - '/subscriptions/'
                - *defaultAzureSubscription
                - '/resourceGroups/'
                - *cfWafRG
                - '/providers/Microsoft.Network/virtualNetworks/'
                - &wafAgName 'cf-exp-waf-ag'
                - 'Vnet'
                - '/subnets/default'
          action: 'create'
    web_services:
      farm: *webServiceFarm
      services:
        # Health services
        - name: &cfHealthApp 'cf-exp-app'
          arm_type: 'Microsoft.Web/sites'
          resource_group: *cfAppSvcRG
          container:
            registry: *primaryACR
            name: &healthAppContainer 'cf-react-app-docker'
            tag: &healthAppTag 'connected-facilities'
          acr_webhook:
            name: 'cfexpappwh'
            registry: *primaryACR
            resource_group: *cfAcrRG
            status: 'enabled'
            actions:
              - 'push'
            arm_type: 'Microsoft.ContainerRegistry/registries/webhooks'
          config:
            DOCKER_ENABLE_CI: true
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
            WEBSITE_HTTPLOGGING_RETENTION_DAYS: 7
          connection_strings:
          container_settings:
            DOCKER_CUSTOM_IMAGE_NAME:
              - 'DOCKER|'
              - *primaryACR
              - '.azurecr.io/'
              - *healthAppContainer
              - ':'
              - *healthAppTag
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
          logging: *defaultWebAppLogging
          tls: 'true'
          access_restrictions:
            - priority: 1
              rule_name: 'downstream AuthN'
              action: 'Allow'
              description: 'only allow access from downstream AuthN'
              ignore_missing_endpoint: 'true'
              scm_site: 'false'
              subnet:
                - '/subscriptions/'
                - *defaultAzureSubscription
                - '/resourceGroups/'
                - *cfAuthNSvcRG
                - '/providers/Microsoft.Network/virtualNetworks/'
                - *postAuthnGateway
                - 'Vnet'
                - '/subnets/default'
          action: 'create'
        - name: &cfHealthAdminApi 'cf-exp-admin-api'
          arm_type: 'Microsoft.Web/sites'
          resource_group: *cfAppSvcRG
          container:
            registry: *primaryACR
            name: &adminApiContainer 'cf-ruby-api-docker'
            tag: &adminApiTag 'connected-facilities'
          acr_webhook:
            name: 'cfexpadminapiwh'
            registry: *primaryACR
            resource_group: *cfAcrRG
            status: 'enabled'
            actions:
              - 'push'
            arm_type: 'Microsoft.ContainerRegistry/registries/webhooks'
          config:
            DOCKER_ENABLE_CI: true
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            RAILS_LOG_TO_STDOUT: 'true'
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
            WEBSITE_HTTPLOGGING_RETENTION_DAYS: 7
          connection_strings:
            SQLServer:
              DATABASE_URL:
                - 'sqlserver://'
                - *cfDefaultDBAdminName
                - ':'
                - '##secure_secret={"vault":"'
                - *kvName
                - '","secret_name":"'
                - *cfDefaultDBSecretName
                - '"}'
                - '##'
                - '@'
                - *cfDefaultDbServer
                - '.database.windows.net:'
                - 1433
                - '/'
                - *healthSchema
          container_settings:
            DOCKER_CUSTOM_IMAGE_NAME:
              - 'DOCKER|'
              - *primaryACR
              - '.azurecr.io/'
              - *adminApiContainer
              - ':'
              - *adminApiTag
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
          logging: *defaultWebAppLogging
          tls: 'true'
          access_restrictions:
            - priority: 1
              rule_name: 'downstream AuthN'
              action: 'Allow'
              description: 'only allow access from downstream AuthN'
              ignore_missing_endpoint: 'true'
              scm_site: 'false'
              subnet:
                - '/subscriptions/'
                - *defaultAzureSubscription
                - '/resourceGroups/'
                - *cfAuthNSvcRG
                - '/providers/Microsoft.Network/virtualNetworks/'
                - *postAuthnGateway
                - 'Vnet'
                - '/subnets/default'
          action: 'create'
        - name: &cfHealthApi 'cf-exp-health-api'
          arm_type: 'Microsoft.Web/sites'
          resource_group: *cfAppSvcRG
          container:
            registry: *primaryACR
            name: &healthApiContainer 'cf-ruby-api-docker'
            tag: &healthApiTag 'connected-facilities'
          acr_webhook:
            name: 'cfexphealthapiwh'
            registry: *primaryACR
            resource_group: *cfAcrRG
            status: 'enabled'
            actions:
              - 'push'
            arm_type: 'Microsoft.ContainerRegistry/registries/webhooks'
          config:
            DOCKER_ENABLE_CI: true
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            RAILS_LOG_TO_STDOUT: 'true'
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
            WEBSITE_HTTPLOGGING_RETENTION_DAYS: 7
          connection_strings:
            SQLServer:
              DATABASE_URL:
                - 'sqlserver://'
                - *cfDefaultDBAdminName
                - ':'
                - '##secure_secret={"vault":"'
                - *kvName
                - '","secret_name":"'
                - *cfDefaultDBSecretName
                - '"}'
                - '##'
                - '@'
                - *cfDefaultDbServer
                - '.database.windows.net:'
                - 1433
                - '/'
                - *healthSchema
          container_settings:
            DOCKER_CUSTOM_IMAGE_NAME:
              - 'DOCKER|'
              - *primaryACR
              - '.azurecr.io/'
              - *healthApiContainer
              - ':'
              - *healthApiTag
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
          logging: *defaultWebAppLogging
          tls: 'true'
          access_restrictions:
            - priority: 1
              rule_name: 'downstream AuthN'
              action: 'Allow'
              description: 'only allow access from downstream AuthN'
              ignore_missing_endpoint: 'true'
              scm_site: 'false'
              subnet:
                - '/subscriptions/'
                - *defaultAzureSubscription
                - '/resourceGroups/'
                - *cfAuthNSvcRG
                - '/providers/Microsoft.Network/virtualNetworks/'
                - *postAuthnGateway
                - 'Vnet'
                - '/subnets/default'
          action: 'create'
        - name: &cfHealthIngestApi 'cf-exp-ingest-api'
          arm_type: 'Microsoft.Web/sites'
          resource_group: *cfAppSvcRG
          container:
            registry: *primaryACR
            name: &healthIngestContainer 'cf-ruby-api-docker'
            tag: &healthIngestTag 'connected-facilities'
          acr_webhook:
            name: 'cfexpingestapiwh'
            registry: *primaryACR
            resource_group: *cfAcrRG
            status: 'enabled'
            actions:
              - 'push'
            arm_type: 'Microsoft.ContainerRegistry/registries/webhooks'
          config:
            DOCKER_ENABLE_CI: true
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            RAILS_LOG_TO_STDOUT: 'true'
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
            WEBSITE_HTTPLOGGING_RETENTION_DAYS: 7
          connection_strings:
            SQLServer:
              DATABASE_URL:
                - 'sqlserver://'
                - *cfDefaultDBAdminName
                - ':'
                - '##secure_secret={"vault":"'
                - *kvName
                - '","secret_name":"'
                - *cfDefaultDBSecretName
                - '"}'
                - '##'
                - '@'
                - *cfDefaultDbServer
                - '.database.windows.net:'
                - 1433
                - '/'
                - *healthSchema
          container_settings:
            DOCKER_CUSTOM_IMAGE_NAME:
              - 'DOCKER|'
              - *primaryACR
              - '.azurecr.io/'
              - *healthIngestContainer
              - ':'
              - *healthIngestTag
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
          logging: *defaultWebAppLogging
          tls: 'true'
          access_restrictions:
            - priority: 1
              rule_name: 'downstream AuthN'
              action: 'Allow'
              description: 'only allow access from downstream AuthN'
              ignore_missing_endpoint: 'true'
              scm_site: 'false'
              subnet:
                - '/subscriptions/'
                - *defaultAzureSubscription
                - '/resourceGroups/'
                - *cfAuthNSvcRG
                - '/providers/Microsoft.Network/virtualNetworks/'
                - *postAuthnGateway
                - 'Vnet'
                - '/subnets/default'
          action: 'create'
        # Self Healing services
        - name: &cfSelfHealingApp 'cf-exp-self-healing-app'
          arm_type: 'Microsoft.Web/sites'
          resource_group: *cfAppSvcRG
          container:
            registry: *primaryACR
            name: &shAPPContainer 'cf-self-healing-app-docker'
            tag: &shAPPTag 'connected-facilities'
          acr_webhook:
            name: 'cfexpselfhealingappwh'
            registry: *primaryACR
            resource_group: *cfAcrRG
            status: 'enabled'
            actions:
              - 'push'
            arm_type: 'Microsoft.ContainerRegistry/registries/webhooks'
          config:
            DOCKER_ENABLE_CI: true
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
            WEBSITE_HTTPLOGGING_RETENTION_DAYS: 7
          connection_strings:
          container_settings:
            DOCKER_CUSTOM_IMAGE_NAME:
              - 'DOCKER|'
              - *primaryACR
              - '.azurecr.io/'
              - *shAPPContainer
              - ':'
              - *shAPPTag
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
          logging: *defaultWebAppLogging
          tls: 'true'
          access_restrictions:
            - priority: 1
              rule_name: 'downstream AuthN'
              action: 'Allow'
              description: 'only allow access from downstream AuthN'
              ignore_missing_endpoint: 'true'
              scm_site: 'false'
              subnet:
                - '/subscriptions/'
                - *defaultAzureSubscription
                - '/resourceGroups/'
                - *cfAuthNSvcRG
                - '/providers/Microsoft.Network/virtualNetworks/'
                - *postAuthnGateway
                - 'Vnet'
                - '/subnets/default'
          action: 'create'
        - name: &cfSelfHealingApi 'cf-exp-self-healing-api'
          arm_type: 'Microsoft.Web/sites'
          resource_group: *cfAppSvcRG
          container:
            registry: *primaryACR
            name: &shAPIContainer 'cf-self-healing-api-docker'
            tag: &shAPITag 'connected-facilities'
          acr_webhook:
            name: 'cfexpselfhealingapiwh'
            registry: *primaryACR
            resource_group: *cfAcrRG
            status: 'enabled'
            actions:
              - 'push'
            arm_type: 'Microsoft.ContainerRegistry/registries/webhooks'
          config:
            DATABASE_CONN_STRING: ''  # will be overridden by the connection string
            DOCKER_ENABLE_CI: true
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
            WEBSITE_HTTPLOGGING_RETENTION_DAYS: 7
          connection_strings:
            SQLServer:
              DATABASE_CONN_STRING:
                - 'DRIVER={FreeTDS};SERVER='
                - *cfDefaultDbServer
                - '.database.windows.net;DATABASE='
                - *selfHealingSchema
                - ';UID='
                - *cfDefaultDBAdminName
                - ';PWD='
                - '##secure_secret={"vault":"'
                - *kvName
                - '","secret_name":"'
                - *cfDefaultDBSecretName
                - '"}'
                - '##'
                - ';PORT='
                - 1433
          container_settings:
            DOCKER_CUSTOM_IMAGE_NAME:
              - 'DOCKER|'
              - *primaryACR
              - '.azurecr.io/'
              - *shAPIContainer
              - ':'
              - *shAPITag
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
          logging: *defaultWebAppLogging
          tls: 'true'
          access_restrictions:
            - priority: 1
              rule_name: 'downstream AuthN'
              action: 'Allow'
              description: 'only allow access from downstream AuthN'
              ignore_missing_endpoint: 'true'
              scm_site: 'false'
              subnet:
                - '/subscriptions/'
                - *defaultAzureSubscription
                - '/resourceGroups/'
                - *cfAuthNSvcRG
                - '/providers/Microsoft.Network/virtualNetworks/'
                - *postAuthnGateway
                - 'Vnet'
                - '/subnets/default'
          action: 'create'
        - name: &cfAtriusObjectsApi 'cf-exp-atrius-objects-api'
          arm_type: 'Microsoft.Web/sites'
          resource_group: *cfAppSvcRG
          container:
            registry: *primaryACR
            name: &atriusObjectsAPIContainer 'cf-atrius-objects-api-docker'
            tag: &shAPITag 'connected-facilities'
          acr_webhook:
            name: 'cfexpatriusobjectsapiwh'
            registry: *primaryACR
            resource_group: *cfAcrRG
            status: 'enabled'
            actions:
              - 'push'
            arm_type: 'Microsoft.ContainerRegistry/registries/webhooks'
          config:
            JWT_ISSUERS: *trustedIdProviders
            DATABASE_USER: *cfObjectsDBAdminName
            DATABASE_URLS: ''  # will be overridden by the connection string
            AUTHORIZED_USERS:
              - '36bc7f6b-2161-415c-a00e-4332b59aaa99'
              - ','
              - 'ff85ea71-79b8-48a1-b65b-ce0a38b87dbd'
            DOCKER_ENABLE_CI: true
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
            WEBSITE_HTTPLOGGING_RETENTION_DAYS: 7
          connection_strings:
            SQLServer:
              DATABASE_PASSWORD:
                - '##secure_secret={"vault":"'
                - *kvName
                - '","secret_name":"'
                - *cfObjectsDBSecretName
                - '"}'
                - '##'
              DATABASE_URLS:
                - 'sqlserver://'
                - *cfObjectsDBAdminName
                - ':'
                - '##secure_secret={"vault":"'
                - *kvName
                - '","secret_name":"'
                - *cfObjectsDBSecretName
                - '"}'
                - '##'
                - '@pltdata01sqlsep2ftp3b7r.database.windows.net:1433/allspice-mapmanager01db'
          container_settings:
            DOCKER_CUSTOM_IMAGE_NAME:
              - 'DOCKER|'
              - *primaryACR
              - '.azurecr.io/'
              - *atriusObjectsAPIContainer
              - ':'
              - *shAPITag
            DOCKER_REGISTRY_SERVER_PASSWORD:
              - '##acr_registry_key={"registry":"'
              - *primaryACR
              - '","resource_group":"'
              - *cfAcrRG
              - '"}'
              - '##'
            DOCKER_REGISTRY_SERVER_USERNAME: *primaryACR
            DOCKER_REGISTRY_SERVER_URL: *uriPrimaryACR
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
          logging: *defaultWebAppLogging
          tls: 'true'
          access_restrictions:
            - priority: 1
              rule_name: 'downstream AuthN'
              action: 'Allow'
              description: 'only allow access from downstream AuthN'
              ignore_missing_endpoint: 'true'
              scm_site: 'false'
              subnet:
                - '/subscriptions/'
                - *defaultAzureSubscription
                - '/resourceGroups/'
                - *cfAuthNSvcRG
                - '/providers/Microsoft.Network/virtualNetworks/'
                - *postAuthnGateway
                - 'Vnet'
                - '/subnets/default'
          action: 'create'
        # Bytelight site portal
        - name: &bytelightSitePortal 'cf-exp-bytelight-site-portal-app'
          arm_type: 'Microsoft.Web/sites'
          resource_group: *cfAppSvcRG
          container:
            registry: ''
            name: 'library/nginx'
            tag: 'stable'
          config:
            DOCKER_ENABLE_CI: true
            DOCKER_REGISTRY_SERVER_PASSWORD: ''
            DOCKER_REGISTRY_SERVER_URL: 'https://index.docker.io'
            DOCKER_REGISTRY_SERVER_USERNAME: ''
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
            WEBSITE_HTTPLOGGING_RETENTION_DAYS: 7
          connection_strings:
          container_settings:
            DOCKER_CUSTOM_IMAGE_NAME: 'DOCKER|library/nginx:stable'
            DOCKER_REGISTRY_SERVER_PASSWORD: ''
            DOCKER_REGISTRY_SERVER_USERNAME: ''
            DOCKER_REGISTRY_SERVER_URL: 'https://index.docker.io'
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
          logging: *defaultWebAppLogging
          tls: 'true'
          access_restrictions:
            - priority: 1
              rule_name: 'downstream AuthN'
              action: 'Allow'
              description: 'only allow access from downstream AuthN'
              ignore_missing_endpoint: 'true'
              scm_site: 'false'
              subnet:
                - '/subscriptions/'
                - *defaultAzureSubscription
                - '/resourceGroups/'
                - *cfAuthNSvcRG
                - '/providers/Microsoft.Network/virtualNetworks/'
                - *postAuthnGateway
                - 'Vnet'
                - '/subnets/default'
          action: 'create'
        # Echo debug service
        - name: &cfEchoDebug 'cf-exp-echo-debug-app'
          arm_type: 'Microsoft.Web/sites'
          resource_group: *cfAppSvcRG
          container:
            registry: ''
            name: 'mendhak/http-https-echo'
            tag: ''
          config:
            DOCKER_ENABLE_CI: true
            DOCKER_REGISTRY_SERVER_PASSWORD: ''
            DOCKER_REGISTRY_SERVER_URL: 'https://index.docker.io'
            DOCKER_REGISTRY_SERVER_USERNAME: ''
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
            WEBSITE_HTTPLOGGING_RETENTION_DAYS: 7
          connection_strings:
          container_settings:
            DOCKER_CUSTOM_IMAGE_NAME: 'DOCKER|mendhak/http-https-echo'
            DOCKER_REGISTRY_SERVER_PASSWORD: ''
            DOCKER_REGISTRY_SERVER_USERNAME: ''
            DOCKER_REGISTRY_SERVER_URL: 'https://index.docker.io'
            WEBSITES_ENABLE_APP_SERVICE_STORAGE: false
          logging: *defaultWebAppLogging
          tls: 'true'
          access_restrictions:
            - priority: 1
              rule_name: 'downstream AuthN'
              action: 'Allow'
              description: 'only allow access from downstream AuthN'
              ignore_missing_endpoint: 'true'
              scm_site: 'false'
              subnet:
                - '/subscriptions/'
                - *defaultAzureSubscription
                - '/resourceGroups/'
                - *cfAuthNSvcRG
                - '/providers/Microsoft.Network/virtualNetworks/'
                - *postAuthnGateway
                - 'Vnet'
                - '/subnets/default'
          action: 'create'
    application_gateways:
      - name: *wafAgName
        arm_type: 'Microsoft.Network/applicationGateways'
        subscription: *defaultAzureSubscription
        resource_group: *cfWafRG
        capacity: 2
        min_capacity: 2
        max_capacity: 10
        frontend_port: 443
        http_settings_cookie_based_affinity: 'Disabled'
        http_settings_port: 443
        http_settings_protocol: 'Https'
        http2: 'Enabled'
        routing_rule_type: 'Basic'
        sku: 'WAF_v2'
        servers: &wafServers
          - *cfAuthnService
        address_pools: *wafServers
        private_ip_addresses: []
        # lessons learned: if a named pip exists and provided, but in a different RG, the WAF template tries to create
        # the same name in its own RG, and fails because it uses an incompatible SKU to do it.
        # the workarounds are to (1) create the named pip in the WAF RG prior to creating the WAF, or (2) use
        # the full resource ID path of the pre-existing pip in the other RG
        public_ip_addresses:
          - *wafIP
        waf_policy:
          name: 'cf-waf-policy'
          location: *defaultAzureLocation
          waf_config:
            state: 'Enabled'
            file_upload_limit_in_mb: '100'
            mode: 'Prevention'
            max_request_body_size_in_kb: '128'
            request_body_check: false  # @@ TODO make this true ... implement 128kb limit for ingest TECH DEBT
            rule_set_group_name: 'cf-waf-rule-set'
            rule_set_type: 'OWASP'
            rule_set_version: '3.1'
            exclusions:
              - matchVariable: 'RequestCookieNames'
                selector: 'ConnectedFacilities_AUTHN'
                selectorMatchOperator: 'StartsWith'
              - matchVariable: 'RequestArgNames'
                selector: 'code'
                selectorMatchOperator: 'Equals'
        tls_policy:
          name: 'cf-strict-tls-policy'
          cipherSuites:
            - 'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384'
            - 'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384'
            - 'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256'
            - 'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256'
            - 'TLS_DHE_RSA_WITH_AES_128_GCM_SHA256'
          minProtocolVersion: 'TLSv1_2'
          policyType: Custom
        ssl_certs:
          - name: 'wildcarddevatrius-iotcom'
            vault_name: *atriusKVName
            subscription: *subscription_tls
        probe:
          name: &wafProbe 'cf-strict-probe'
          arm_type: 'Microsoft.Network/applicationGateways/probes'
          interval: 30
          timeout: 30
          match:
            statusCodes:
              - '200-399'
          minServers: 0
          path: '/'
          pickHostNameFromBackendHttpSettings: true
          protocol: 'Https'
          unhealthyThreshold: 3
        http_settings:
          name: &cfWafHttpSetting 'cf-default-http-settings'
          arm_type: 'Microsoft.Network/applicationGateways/backendHttpSettingsCollection'
          affinityCookieName: 'ApplicationGatewayAffinity'
          authenticationCertificates: []
          connectionDraining: 0
          cookieBasedAffinity: 'Disabled'
          pickHostNameFromBackendAddress: true
          port: 443
          probe:
            name: *wafProbe
          probeEnabled: true
          protocol: 'Https'
          requestTimeout: 20
          trustedRootCertificates: []
        rewrite_rule_sets:
          - name: &wafRewriteRuleSet 'security_headers'
            arm_type: 'Microsoft.Network/applicationGateways/rewriteRuleSets'
            rewriteRules:
              - actionSet:
                  requestHeaderConfigurations: []
                  responseHeaderConfigurations:
                    - headerName: 'Strict-Transport-Security'
                      headerValue: 'max-age=31536000'
                conditions: []
                name: 'HSTS'
                ruleSequence: 100
              - actionSet:
                  requestHeaderConfigurations: []
                  responseHeaderConfigurations:
                    - headerName: 'Referrer-Policy'
                      headerValue: 'strict-origin-when-cross-origin'
                conditions: []
                name: 'ReferrerPolicy'
                ruleSequence: 101
              - actionSet:
                  requestHeaderConfigurations: []
                  responseHeaderConfigurations:
                    - headerName: 'X-Frame-Options'
                      headerValue: 'sameorigin'
                conditions: []
                name: 'XFrameOptions'
                ruleSequence: 102
              - actionSet:
                  requestHeaderConfigurations: []
                  responseHeaderConfigurations:
                    - headerName: 'Content-Security-Policy'
                      headerValue: "default-src 'self'; frame-ancestors 'self' login.microsoft.com;"
                conditions:
                  - ignoreCase: true
                    negate: true
                    pattern: '^.+$'
                    variable: 'http_resp_Content-Security-Policy'
                name: 'ContentSecurityPolicy'
                ruleSequence: 103
              - actionSet:
                  requestHeaderConfigurations: []
                  responseHeaderConfigurations:
                    - headerName: 'Feature-Policy'
                      headerValue: >-
                        accelerometer 'none';
                        ambient-light-sensor 'none';
                        autoplay 'none';
                        battery 'none';
                        camera 'none';
                        display-capture 'none';
                        document-domain 'none';
                        encrypted-media 'none';
                        execution-while-not-rendered 'none';
                        execution-while-out-of-viewport 'none';
                        fullscreen 'none';
                        geolocation 'none';
                        gyroscope 'none';
                        layout-animations 'none';
                        legacy-image-formats 'none';
                        magnetometer 'none';
                        microphone 'none';
                        midi 'none';
                        oversized-images 'none';
                        payment 'none';
                        picture-in-picture 'none';
                        speaker 'none';
                        sync-xhr 'none';
                        unoptimized-images 'none';
                        unsized-media 'none';
                        usb 'none';
                        vibrate 'none';
                        vr 'none';
                        wake-lock 'none';
                        webauthn 'none';
                        vr 'none';
                        xr-spatial-tracking 'none';
                        xr 'none';
                conditions: []
                name: 'FeaturePolicy'
                ruleSequence: 104
              - actionSet:
                  requestHeaderConfigurations: []
                  responseHeaderConfigurations:
                    - headerName: 'X-Content-Type-Options'
                      headerValue: 'nosniff'
                conditions: []
                name: 'X-Content-Type-Options'
                ruleSequence: 108
              - actionSet:
                  requestHeaderConfigurations: []
                  responseHeaderConfigurations:
                    - headerName: 'Server'
                      headerValue: ''
                conditions: []
                name: 'DeleteServerHeader'
                ruleSequence: 110
              - actionSet:
                  requestHeaderConfigurations: []
                  responseHeaderConfigurations:
                    - headerName: 'Access-Control-Allow-Origin'
                      headerValue: 'https://login.microsoftonline.com'
                conditions: []
                name: 'AccessControlAllowOrigin'
                ruleSequence: 120
        request_routing_rules:
          - name: 'rule1'
            arm_type: 'Microsoft.Network/applicationGateways/requestRoutingRules'
            properties:
              address_pool: *cfAuthnService
              ruleType: 'Basic'
              http_setting: *cfWafHttpSetting
              rewrite_rule_set: *wafRewriteRuleSet  # @@ TODO -- manual at the moment - no way to set this via AZ CLI
        subnet_service_endpoints:
          - name: 'upstream authn access'
            subnet_name: 'default'
            service_endpoint_names:
              - 'Microsoft.Web'
        action: 'preserve'
      - name: *postAuthnGateway
        arm_type: 'Microsoft.Network/applicationGateways'
        subscription: *defaultAzureSubscription
        resource_group: *cfAuthNSvcRG
        capacity: 2
        frontend_port: 443
        http_settings_cookie_based_affinity: 'Disabled'
        http_settings_port: 443
        http_settings_protocol: 'Https'
        http2: 'Enabled'
        sku: 'Standard_Medium'
        servers: &serverNames
          - *cfHealthApp
          - *cfHealthAdminApi
          - *cfHealthApi
          - *cfHealthIngestApi
          - *cfSelfHealingApp
          - *cfSelfHealingApi
          - *cfAtriusObjectsApi
          - *cfEchoDebug
          - *bytelightSitePortal
        address_pools: *serverNames
        private_ip_addresses: []
        public_ip_addresses:
          - *postAuthnIP
        waf_policy:
        tls_policy:
          name: 'cf-strict-tls-policy'
          cipherSuites:
            - 'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384'
            - 'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384'
            - 'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256'
            - 'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256'
            - 'TLS_DHE_RSA_WITH_AES_128_GCM_SHA256'
          minProtocolVersion: 'TLSv1_2'
          policyType: Custom
        ssl_certs:
          - name: 'wildcarddevatrius-iotcom'
            vault_name: *atriusKVName
            subscription: *subscription_tls
        probe:
          name: &authnGwAppProbe 'cf-authn-strict-probe'
          arm_type: 'Microsoft.Network/applicationGateways/probes'
          interval: 30
          timeout: 30
          match:
            statusCodes:
              - '200-399'
          minServers: 0
          path: '/'
          pickHostNameFromBackendHttpSettings: true
          protocol: 'Https'
          unhealthyThreshold: 3
        http_settings:
          name: &postAuthNHttpSettings 'cf-authn-default-http-settings'
          arm_type: 'Microsoft.Network/applicationGateways/backendHttpSettingsCollection'
          affinityCookieName: 'ApplicationGatewayAffinity'
          authenticationCertificates: []
          connectionDraining: 0
          cookieBasedAffinity: 'Disabled'
          pickHostNameFromBackendAddress: true
          port: 443
          probe:
            name: *authnGwAppProbe
          probeEnabled: true
          protocol: 'Https'
          requestTimeout: 20
          trustedRootCertificates: []
        url_path_maps:  # basic strategy is one address pool per server type, and one server type per address pool
          - name: &postAuthnUrlPathMap 'cf-exp-post-authn-path-map-001'
            arm_type: Microsoft.Network/applicationGateways/urlPathMaps
            defaultBackendAddressPool: *cfHealthApp
            defaultBackendHttpSettings: *postAuthNHttpSettings
            defaultRedirectConfiguration: null
            defaultRewriteRuleSet: null
            pathRules:
              - name: 'post-authn-cf-health-app-path-rule'
                arm_type: 'Microsoft.Network/applicationGateways/urlPathMaps/pathRules'
                backendAddressPool: *cfHealthApp
                backendHttpSettings: *postAuthNHttpSettings
                paths:
                  - '/cf-app'
                  - '/cf-app/*'
                redirectConfiguration: null
                rewriteRuleSet: null
              - name: 'post-authn-cf-health-admin-api-path-rule'
                arm_type: 'Microsoft.Network/applicationGateways/urlPathMaps/pathRules'
                backendAddressPool: *cfHealthAdminApi
                backendHttpSettings: *postAuthNHttpSettings
                paths:
                  - '/cf-admin'
                  - '/cf-admin/*'
                redirectConfiguration: null
                rewriteRuleSet: null
              - name: 'post-authn-cf-health-api-path-rule'
                arm_type: 'Microsoft.Network/applicationGateways/urlPathMaps/pathRules'
                backendAddressPool: *cfHealthApi
                backendHttpSettings: *postAuthNHttpSettings
                paths:
                  - '/cf-health'
                  - '/cf-health/*'
                redirectConfiguration: null
                rewriteRuleSet: null
              - name: 'post-authn-cf-health-ingest-api-path-rule'
                arm_type: 'Microsoft.Network/applicationGateways/urlPathMaps/pathRules'
                backendAddressPool: *cfHealthIngestApi
                backendHttpSettings: *postAuthNHttpSettings
                paths:
                  - '/cf-ingest'
                  - '/cf-ingest/*'
                redirectConfiguration: null
                rewriteRuleSet: null
              - name: 'post-authn-cf-self-healing-app-path-rule'
                arm_type: 'Microsoft.Network/applicationGateways/urlPathMaps/pathRules'
                backendAddressPool: *cfSelfHealingApp
                backendHttpSettings: *postAuthNHttpSettings
                paths:
                  - '/cf-self-healing'
                  - '/cf-self-healing/*'
                redirectConfiguration: null
                rewriteRuleSet: null
              - name: 'post-authn-cf-self-healing-api-path-rule'
                arm_type: 'Microsoft.Network/applicationGateways/urlPathMaps/pathRules'
                backendAddressPool: *cfSelfHealingApi
                backendHttpSettings: *postAuthNHttpSettings
                paths:
                  - '/cf-self-healing-api'
                  - '/cf-self-healing-api/*'
                redirectConfiguration: null
                rewriteRuleSet: null
              - name: 'post-authn-cf-atrius-objects-path-rule'
                arm_type: 'Microsoft.Network/applicationGateways/urlPathMaps/pathRules'
                backendAddressPool: *cfAtriusObjectsApi
                backendHttpSettings: *postAuthNHttpSettings
                paths:
                  - '/cf-atrius-objects'
                  - '/cf-atrius-objects/*'
                  - '/cf-lights-map/distech-eclypse'
                  - '/cf-lights-map/distech-eclypse/*'
                redirectConfiguration: null
                rewriteRuleSet: null
              - name: 'post-authn-cf-echo-debug-app-path-rule'
                arm_type: 'Microsoft.Network/applicationGateways/urlPathMaps/pathRules'
                backendAddressPool: *cfEchoDebug
                backendHttpSettings: *postAuthNHttpSettings
                paths:
                  - '/cf-echo'
                  - '/cf-echo/*'
                redirectConfiguration: null
                rewriteRuleSet: null
              - name: 'post-authn-bytelight-site-portal-app-path-rule'
                arm_type: 'Microsoft.Network/applicationGateways/urlPathMaps/pathRules'
                backendAddressPool: *bytelightSitePortal
                backendHttpSettings: *postAuthNHttpSettings
                paths:
                  - '/bytelight-site-portal'
                  - '/bytelight-site-portal/*'
                redirectConfiguration: null
                rewriteRuleSet: null
        request_routing_rules:
          - name: 'rule1'
            arm_type: 'Microsoft.Network/applicationGateways/requestRoutingRules'
            properties:
              address_pool: *cfHealthApp
              ruleType: 'PathBasedRouting'
              urlPathMap: *postAuthnUrlPathMap
              http_setting: *postAuthNHttpSettings
        subnet_service_endpoints:
          - name: 'upstream webapp access'
            subnet_name: 'default'
            service_endpoint_names:
              - 'Microsoft.Web'
        action: 'preserve'
    application_registration:  # @@ TODO manual - insufficient permissions from AZ CLI
      tenant: *appRegistrationTenant
      application_id: *appRegistrationID
      variables:
        app_auth_callback_url: *appAuthCallbackURL
      client_secret:
        vault: *kvName
        secret_name: *oauthProxyClientSecretName
        description: 'cf-exp-auth'  # unfortunately limited to 15 characters by AZ CLI
