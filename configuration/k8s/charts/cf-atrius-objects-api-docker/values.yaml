# Default values for cf-atrius-objects-api-docker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 'cfqaregistry.azurecr.io/cf-atrius-objects-api-docker'
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

config:
  # placeholder values should allow the service to install and minimally respond
  environment:
    AUTHORIZED_USERS: 'fixme-there-are-no-authorized-users-in-this-comma-separated-list'
    ELM_LIGHTS_GROUPS_API_URL: '/cf-elm/api/v1/light-groups/published-light-groups'
    JWT_ISSUERS: 'placeholder=fixme-comma-separated-key-equals-value-pairs'
    SERVICE_PRINCIPAL_CLIENT_ID: 'fixme-placeholder-elm-service-principal-client-id'
    SERVICE_PRINCIPAL_TENANT_ID: 'fixme-placeholder-elm-service-principal-tenant-id'
    SERVICE_PRINCIPAL_RESOURCE: 'fixme-placeholder-passage-application-id'
  secrets:
    CF_DISTECH_LIGHTSMAP_API_KEY: 'fixme-placeholder-inbound-api-key'
    DATABASE_URLS: 'fixme-placeholder-comma-separated-database-connection-strings'
    SERVICE_PRINCIPAL_SECRET: 'fixme-placeholder-elm-service-principal-secret'

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
